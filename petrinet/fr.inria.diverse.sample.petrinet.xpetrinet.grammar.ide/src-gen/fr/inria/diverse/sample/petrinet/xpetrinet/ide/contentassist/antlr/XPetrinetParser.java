/*
 * generated by Xtext 2.9.2
 */
package fr.inria.diverse.sample.petrinet.xpetrinet.ide.contentassist.antlr;

import com.google.inject.Inject;
import fr.inria.diverse.sample.petrinet.xpetrinet.ide.contentassist.antlr.internal.InternalXPetrinetParser;
import fr.inria.diverse.sample.petrinet.xpetrinet.services.XPetrinetGrammarAccess;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class XPetrinetParser extends AbstractContentAssistParser {

	@Inject
	private XPetrinetGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalXPetrinetParser createParser() {
		InternalXPetrinetParser result = new InternalXPetrinetParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getNetAccess().getGroup(), "rule__Net__Group__0");
					put(grammarAccess.getNetAccess().getGroup_2(), "rule__Net__Group_2__0");
					put(grammarAccess.getNetAccess().getGroup_2_2(), "rule__Net__Group_2_2__0");
					put(grammarAccess.getNetAccess().getGroup_3(), "rule__Net__Group_3__0");
					put(grammarAccess.getNetAccess().getGroup_3_2(), "rule__Net__Group_3_2__0");
					put(grammarAccess.getPlaceAccess().getGroup(), "rule__Place__Group__0");
					put(grammarAccess.getPlaceAccess().getGroup_3(), "rule__Place__Group_3__0");
					put(grammarAccess.getTransitionAccess().getGroup(), "rule__Transition__Group__0");
					put(grammarAccess.getTransitionAccess().getGroup_4(), "rule__Transition__Group_4__0");
					put(grammarAccess.getTransitionAccess().getGroup_7(), "rule__Transition__Group_7__0");
					put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
					put(grammarAccess.getNetAccess().getPlacesAssignment_2_1(), "rule__Net__PlacesAssignment_2_1");
					put(grammarAccess.getNetAccess().getPlacesAssignment_2_2_1(), "rule__Net__PlacesAssignment_2_2_1");
					put(grammarAccess.getNetAccess().getTransitionsAssignment_3_1(), "rule__Net__TransitionsAssignment_3_1");
					put(grammarAccess.getNetAccess().getTransitionsAssignment_3_2_1(), "rule__Net__TransitionsAssignment_3_2_1");
					put(grammarAccess.getPlaceAccess().getNameAssignment_2(), "rule__Place__NameAssignment_2");
					put(grammarAccess.getPlaceAccess().getInitialTokensAssignment_3_1(), "rule__Place__InitialTokensAssignment_3_1");
					put(grammarAccess.getTransitionAccess().getNameAssignment_1(), "rule__Transition__NameAssignment_1");
					put(grammarAccess.getTransitionAccess().getInputAssignment_3(), "rule__Transition__InputAssignment_3");
					put(grammarAccess.getTransitionAccess().getInputAssignment_4_1(), "rule__Transition__InputAssignment_4_1");
					put(grammarAccess.getTransitionAccess().getOutputAssignment_6(), "rule__Transition__OutputAssignment_6");
					put(grammarAccess.getTransitionAccess().getOutputAssignment_7_1(), "rule__Transition__OutputAssignment_7_1");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalXPetrinetParser typedParser = (InternalXPetrinetParser) parser;
			typedParser.entryRuleNet();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public XPetrinetGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(XPetrinetGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
